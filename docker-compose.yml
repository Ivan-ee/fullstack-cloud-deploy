version: '3'

volumes:
  prometheus-data: { }
  grafana-data: { }
  elastic_data: { }

services:
  web:
    image: "ivanee/flask-app:latest"
    depends_on:
      - db
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - VIRTUAL_HOST=smirnowwwivan.ru
      - LETSENCRYPT_HOST=smirnowwwivan.ru
    env_file:
      - .env
    deploy:
      replicas: 3
    restart: "always"

  nginx:
    container_name: nginx
    image: nginxproxy/nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /var/docker/nginx/html:/usr/share/nginx/html
      - /var/docker/nginx/certs:/etc/nginx/certs
      - /var/docker/nginx/vhost:/etc/nginx/vhost.d

  letsencrypt-companion:
    container_name: letsencrypt-companion
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /var/docker/nginx/acme:/etc/acme.sh
      - /var/docker/nginx/html:/usr/share/nginx/html
      - /var/docker/nginx/certs:/etc/nginx/certs
      - /var/docker/nginx/vhost:/etc/nginx/vhost.d
    environment:
      DEFAULT_EMAIL: smirnowwwivan@mail.ru
      NGINX_PROXY_CONTAINER: nginx

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    environment:
      - VIRTUAL_HOST=prometheus.smirnowwwivan.ru
      - LETSENCRYPT_HOST=prometheus.smirnowwwivan.ru

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - VIRTUAL_HOST=grafana.smirnowwwivan.ru
      - LETSENCRYPT_HOST=grafana.smirnowwwivan.ru

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    ports:
      - '9100:9100'
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  db:
    image: postgres:16-alpine
    container_name: db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: "always"

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    restart: "always"

  Elasticsearch:
    image: elasticsearch:8.16.0
    container_name: elasticsearch
    restart: always
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx512m -Xms512m"
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'

  Logstash:
    image: logstash:8.16.0
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
      - Elasticsearch
    ports:
      - '9600:9600'

  Kibana:
    image: kibana:8.16.0
    container_name: kibana
    restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - VIRTUAL_HOST=kibana.smirnowwwivan.ru
      - LETSENCRYPT_HOST=kibana.smirnowwwivan.ru
    depends_on:
      - Elasticsearch
